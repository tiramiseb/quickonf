// Code generated by "embedded-cookbook". DO NOT EDIT.

package instructions

import "github.com/tiramiseb/quickonf/commands"

func init() {
	recipes["all ubuntu repo"] = CookbookRecipe{
		Doc: `Configure apt sources.list with all sections from an Ubuntu mirror (see https://launchpad.net/ubuntu/+archivemirrors)`,
		VarsDoc: map[string]string{
			`mirror`: `URL of the mirror (eg "http://archive.ubuntu.com/ubuntu/")`,
		},
		Instructions: []Instruction{
			&Command{
				Command: commands.UGet("http.get.var"),
				Arguments: []string{
					`<mirror>/dists/<oscodename>/Release`,
				},
				Targets: []string{
					`m_rel`,
				},
			},
			&Command{
				Command: commands.UGet("regexp.submatch"),
				Arguments: []string{
					`Codename: (.*)`,
					`<m_rel>`,
				},
				Targets: []string{
					`m_cn`,
				},
			},
			&If{
				Operation: &Equal{Left: "<m_cn>", Right: "<oscodename>"},
				Instructions: []Instruction{
					&Command{
						Command: commands.UGet("file.content"),
						Arguments: []string{
							`/etc/apt/sources.list`,
							`# Sources from Quickonf
deb <mirror> <oscodename> main restricted universe multiverse
deb <mirror> <oscodename>-updates main restricted universe multiverse
deb <mirror> <oscodename>-backports main restricted universe multiverse
deb http://security.ubuntu.com/ubuntu/ <oscodename>-security main restricted universe multiverse
`,
						},
					},
					&Command{
						Command: commands.UGet("apt.upgrade"),
					},
				},
			},
		},
	}
	recipes["apt sources.list"] = CookbookRecipe{
		Doc: `Change the sources list file for APT from a file`,
		VarsDoc: map[string]string{
			`src`: `Path of the file to use as sources.list`,
		},
		Instructions: []Instruction{
			&Command{
				Command: commands.UGet("file.read"),
				Arguments: []string{
					`<src>`,
				},
				Targets: []string{
					`aptsrc`,
				},
			},
			&Expand{
				Variable: "aptsrc",
			},
			&Command{
				Command: commands.UGet("file.content"),
				Arguments: []string{
					`/etc/apt/sources.list`,
					`<aptsrc>`,
				},
			},
			&Command{
				Command: commands.UGet("apt.upgrade"),
			},
		},
	}
	recipes["less journalctl logs"] = CookbookRecipe{
		Doc: `Limit journalctl logs to 100 MB`,
		Instructions: []Instruction{
		},
	}
	recipes["no apport"] = CookbookRecipe{
		Doc: `Disable Apport alerts`,
		Instructions: []Instruction{
			&Command{
				Command: commands.UGet("file.content"),
				Arguments: []string{
					`/etc/default/apport`,
					`# Disabled by Quickonf
enabled=0
`,
				},
			},
		},
	}
	recipes["no automatic apt updates"] = CookbookRecipe{
		Doc: `Disable periodic apt update, upgrade, autoclean`,
		Instructions: []Instruction{
			&Command{
				Command: commands.UGet("file.content"),
				Arguments: []string{
					`/etc/apt/apt.conf.d/10periodic`,
					`# Placed by Quickonf
APT::Periodic::Update-Package-Lists 0;
APT::Periodic::Download-Upgradeable-Packages 0;
APT::Periodic::AutocleanInterval 0;
`,
				},
			},
		},
	}
	recipes["ubuntu more restricted"] = CookbookRecipe{
		Doc: `Install Ubuntu "Restricted" packages, and more: gstreamer-plugins-bad`,
		Instructions: []Instruction{
			&Command{
				Command: commands.UGet("debconf.set"),
				Arguments: []string{
					`ttf-mscorefonts-installer`,
					`msttcorefonts/accepted-mscorefonts-eula`,
					`true`,
				},
			},
			&Command{
				Command: commands.UGet("debconf.set"),
				Arguments: []string{
					`libdvd-pkg`,
					`libdvd-pkg/first-install`,
					`.`,
				},
			},
			&Command{
				Command: commands.UGet("debconf.set"),
				Arguments: []string{
					`libdvd-pkg`,
					`libdvd-pkg/post-invoke_hook-install`,
					`true`,
				},
			},
			&Command{
				Command: commands.UGet("apt.install"),
				Arguments: []string{
					`gstreamer1.0-plugins-bad`,
				},
			},
			&Command{
				Command: commands.UGet("apt.install"),
				Arguments: []string{
					`ubuntu-restricted-extras`,
				},
			},
			&Command{
				Command: commands.UGet("apt.install"),
				Arguments: []string{
					`libdvd-pkg`,
				},
			},
			&Command{
				Command: commands.UGet("dpkg.reconfigure"),
				Arguments: []string{
					`libdvd-pkg`,
				},
			},
		},
	}
}
