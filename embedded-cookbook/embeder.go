package main

import (
	"fmt"
	"io"

	"github.com/tiramiseb/quickonf/instructions"
)

var (
	head = []byte(`// Code generated by "embedded-cookbook". DO NOT EDIT.

package instructions

import "github.com/tiramiseb/quickonf/commands"

func init() {
`)

	foot = []byte(`}
`)
)

type embeder struct {
	groups *instructions.Groups
	w      io.Writer
}

func (e *embeder) make() {
	e.w.Write(head)

	group := e.groups.FirstGroup()
	for {
		e.write(1, "recipes[\"%s\"] = []Instruction{", group.Name)
		for _, ins := range group.Instructions {
			e.instruction(2, ins)
		}
		e.write(1, "}")
		newGrp := group.Next(1, true)
		if newGrp == group {
			break
		}
		group = newGrp
	}
	e.w.Write(foot)
}

func (e *embeder) write(level int, format string, a ...any) {
	for i := 0; i < level; i++ {
		e.w.Write([]byte{'\t'})
	}
	e.w.Write([]byte(fmt.Sprintf(format, a...)))
	e.w.Write([]byte{'\n'})
}
